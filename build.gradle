buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: "maven"
apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ext.buildnumber = 0
if (System.getenv('BUILD_NUMBER') != null)
    project.buildnumber = System.getenv('BUILD_NUMBER')
else {
    try {
        ext.buildnumber += "_" + "git rev-parse --abbrev-ref HEAD".execute().text.trim();
        ext.buildnumber += "_" + "git rev-parse --short HEAD".execute().text.trim();
    } catch (all) {
    }
    logger.lifecycle "No build number detected, setting to ${ext.buildnumber}"
}

version = "1.10.2-1.0.0-b${buildnumber}"
group = "us.getfluxed" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Fluxed-Crystals 3"

minecraft {
    useDepAts = true
    version = "1.10.2-12.18.2.2151"
    runDir = "run"
    mappings = "snapshot_20161111"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name "Tesla"
        url 'http://maven.epoxide.xyz'
    }
    maven {
        name 'Mobius'
        url 'http://mobiusstrip.eu/maven'
    }
    maven {
        name 'Jared'
        url 'http://blamejared.com/maven'
    }
    maven {
        name 'JEI'
        url "http://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    compile "net.darkhax.tesla:Tesla:1.10.2-1.2.1.42"
//    compile "mcp.mobius.waila:Waila:1.7.0-B3_1.9.4"
    deobfCompile "mezz.jei:jei_1.10.2:3.12.6.304"
    compile "com.teamacronymcoders.base:base:1.10.2-1.2.0-Snapshot.94:deobf"

}

def commonManifest = {
    attributes 'Main-Class': 'us.getfluxed.fluxedcrystals.FluxedCrystals'
    //attributes 'FMLAT': 'base_at.cfg'
}
jar {
    classifier = 'universal'
    manifest commonManifest
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest commonManifest
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    manifest commonManifest
}

artifacts {
    archives deobfJar
    archives srcJar
}

configurations {
    deployerJars
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.2'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///var/www/html/maven")
        }
    }
}
processResources
        {

            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'


                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }
